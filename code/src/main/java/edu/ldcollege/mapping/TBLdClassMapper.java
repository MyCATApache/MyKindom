package edu.ldcollege.mapping;

import edu.ldcollege.domain.TBLdClass;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface TBLdClassMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldclass
     *
     * @mbg.generated
     */
    @Delete({
        "delete from ldclass",
        "where classId = #{classid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer classid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldclass
     *
     * @mbg.generated
     */
    @Insert({
        "insert into ldclass (classId, className, ",
        "classDesc, createDay, ",
        "startDate, endDay, ",
        "monitorId, commissaryId, ",
        "curNormalStudents, curArrearagedStudents, ",
        "dropedStudents)",
        "values (#{classid,jdbcType=INTEGER}, #{classname,jdbcType=VARCHAR}, ",
        "#{classdesc,jdbcType=VARCHAR}, #{createday,jdbcType=TIMESTAMP}, ",
        "#{startdate,jdbcType=TIMESTAMP}, #{endday,jdbcType=TIMESTAMP}, ",
        "#{monitorid,jdbcType=INTEGER}, #{commissaryid,jdbcType=INTEGER}, ",
        "#{curnormalstudents,jdbcType=INTEGER}, #{curarrearagedstudents,jdbcType=INTEGER}, ",
        "#{dropedstudents,jdbcType=INTEGER})"
    })
    int insert(TBLdClass record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldclass
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "classId, className, classDesc, createDay, startDate, endDay, monitorId, commissaryId, ",
        "curNormalStudents, curArrearagedStudents, dropedStudents",
        "from ldclass",
        "where classId = #{classid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="classId", property="classid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="className", property="classname", jdbcType=JdbcType.VARCHAR),
        @Result(column="classDesc", property="classdesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="createDay", property="createday", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="startDate", property="startdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="endDay", property="endday", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="monitorId", property="monitorid", jdbcType=JdbcType.INTEGER),
        @Result(column="commissaryId", property="commissaryid", jdbcType=JdbcType.INTEGER),
        @Result(column="curNormalStudents", property="curnormalstudents", jdbcType=JdbcType.INTEGER),
        @Result(column="curArrearagedStudents", property="curarrearagedstudents", jdbcType=JdbcType.INTEGER),
        @Result(column="dropedStudents", property="dropedstudents", jdbcType=JdbcType.INTEGER)
    })
    TBLdClass selectByPrimaryKey(Integer classid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldclass
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "classId, className, classDesc, createDay, startDate, endDay, monitorId, commissaryId, ",
        "curNormalStudents, curArrearagedStudents, dropedStudents",
        "from ldclass"
    })
    @Results({
        @Result(column="classId", property="classid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="className", property="classname", jdbcType=JdbcType.VARCHAR),
        @Result(column="classDesc", property="classdesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="createDay", property="createday", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="startDate", property="startdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="endDay", property="endday", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="monitorId", property="monitorid", jdbcType=JdbcType.INTEGER),
        @Result(column="commissaryId", property="commissaryid", jdbcType=JdbcType.INTEGER),
        @Result(column="curNormalStudents", property="curnormalstudents", jdbcType=JdbcType.INTEGER),
        @Result(column="curArrearagedStudents", property="curarrearagedstudents", jdbcType=JdbcType.INTEGER),
        @Result(column="dropedStudents", property="dropedstudents", jdbcType=JdbcType.INTEGER)
    })
    List<TBLdClass> selectAll();

    
    @Select({
        "<script>" +
        "select "+
        "classId, className, classDesc, createDay, startDate, endDay, monitorId, commissaryId, "+
        "curNormalStudents, curArrearagedStudents, dropedStudents "+
        "from ldclass "+
        "<if test=\"keyword != null and keyword != '' \" > where className like concat('%',#{keyword},'%') </if></script>"
    })
    @Results({
        @Result(column="classId", property="classid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="className", property="classname", jdbcType=JdbcType.VARCHAR),
        @Result(column="classDesc", property="classdesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="createDay", property="createday", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="startDate", property="startdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="endDay", property="endday", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="monitorId", property="monitorid", jdbcType=JdbcType.INTEGER),
        @Result(column="commissaryId", property="commissaryid", jdbcType=JdbcType.INTEGER),
        @Result(column="curNormalStudents", property="curnormalstudents", jdbcType=JdbcType.INTEGER),
        @Result(column="curArrearagedStudents", property="curarrearagedstudents", jdbcType=JdbcType.INTEGER),
        @Result(column="dropedStudents", property="dropedstudents", jdbcType=JdbcType.INTEGER)
    })
    List<TBLdClass> selectAllByKeyWord(@Param("keyword") String keyword);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldclass
     *
     * @mbg.generated
     */
    @Update({
        "update ldclass",
        "set className = #{classname,jdbcType=VARCHAR},",
          "classDesc = #{classdesc,jdbcType=VARCHAR},",
          "createDay = #{createday,jdbcType=TIMESTAMP},",
          "startDate = #{startdate,jdbcType=TIMESTAMP},",
          "endDay = #{endday,jdbcType=TIMESTAMP},",
          "monitorId = #{monitorid,jdbcType=INTEGER},",
          "commissaryId = #{commissaryid,jdbcType=INTEGER},",
          "curNormalStudents = #{curnormalstudents,jdbcType=INTEGER},",
          "curArrearagedStudents = #{curarrearagedstudents,jdbcType=INTEGER},",
          "dropedStudents = #{dropedstudents,jdbcType=INTEGER}",
        "where classId = #{classid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TBLdClass record);
    
    
}